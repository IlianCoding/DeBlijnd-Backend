stages:
  - build_application
#  - build_image
#  - deploy_image

variables:
  IMAGE_NAME: "$CI_REGISTRY_IMAGE:latest"
  DOCKER_IMAGE_TAR: "docker-image.tar"

before_script:
  - echo POSTGRES_USER=$POSTGRES_USER >> .env
  - echo POSTGRES_PASSWORD=$POSTGRES_PASSWORD >> .env
  - echo POSTGRES_DB=$POSTGRES_DB >> .env

build_application:
  stage: build_application
  image: python:3.12.8-slim
  script:
    - pip install --no-cache-dir -r requirements.txt
  artifacts:
    paths:
      - .
    when: always

#build_image:
#  stage: build_image
#  image: docker:latest
#  services:
#    - docker:dind
#  only:
#    refs:
#      - main
#  script:
#    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
#    - docker build --build-arg ENV=production -t "$IMAGE_NAME" .
#    - docker save -o "$DOCKER_IMAGE_TAR" "$IMAGE_NAME"
#    - docker push "$CI_REGISTRY_IMAGE"
#  dependencies:
#    - build_application
#  artifacts:
#    paths:
#      - "$DOCKER_IMAGE_TAR"
#    when: always